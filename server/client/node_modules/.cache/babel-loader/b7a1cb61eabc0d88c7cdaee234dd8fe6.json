{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anuwa\\\\Desktop\\\\Student_New\\\\client\\\\src\\\\components\\\\FileUpload\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StudentFileUpload = props => {\n  _s();\n\n  const [file, setFile] = useState(null); // state for storing actual image\n\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\n\n  const [data, setData] = useState({\n    // groupname: '',\n    submissionTypes: []\n  });\n  const [submissionName, SetsubmissionName] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\n\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\n\n  useEffect(() => {\n    axios.get('http://localhost:8082/api/submissionType/') //backend path\n    .then(response => {\n      if (response.data.length > 0) {\n        setData({\n          submissionTypes: response.data.map(submission => submission.submissionName)\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const onDrop = files => {\n    const [uploadedFile] = files;\n    setFile(uploadedFile);\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewSrc(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(uploadedFile);\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\n    dropRef.current.style.border = '2px dashed #e9ebeb';\n  };\n\n  const updateBorder = dragState => {\n    if (dragState === 'over') {\n      dropRef.current.style.border = '2px solid #000';\n    } else if (dragState === 'leave') {\n      dropRef.current.style.border = '2px dashed #e9ebeb';\n    }\n  };\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const subName = submissionName;\n      const groupname = sessionStorage.getItem(\"group\");\n      const sub = subName.submissionName; // if (groupname.trim() !== '' && submissionName.trim() !== '') {\n\n      if (file) {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('groupname', groupname);\n        formData.append('submissionName', sub);\n        setErrorMsg('');\n        await axios.post('http://localhost:8082/api/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        props.history.push('/student-home');\n      } else {\n        setErrorMsg('Please select a file to add.');\n      } // } else {\n      //   setErrorMsg('Please enter all the field values.');\n      // }\n\n    } catch (error) {\n      error.response && setErrorMsg(error.response.data);\n    }\n  };\n\n  const onChangeSubmissionName = e => {\n    SetsubmissionName({\n      submissionName: e.target.value\n    });\n  };\n\n  const handleInputChange = event => {\n    setData({ ...data,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"System Admin - Document / Presentation Template Upload Portal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"search-form\",\n      onSubmit: handleOnSubmit,\n      children: [errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMsg\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"groupname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Group name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"groupname\",\n              required: true,\n              readOnly: true,\n              value: sessionStorage.getItem(\"group\") || '',\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"Submission Type\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Submission Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Default select example\",\n              required: true,\n              className: \"form-control\",\n              value: data.submissionName,\n              onChange: onChangeSubmissionName // onChange={(e) => setState({submissionName: e.target.value})}\n              ,\n              children: data.submissionTypes.map(function (submission) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: submission,\n                  children: submission\n                }, submission, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 28\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"groupname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Description \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"a\",\n              required: true,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"groupname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Deadline \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"a\",\n              required: true,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: onDrop,\n          onDragEnter: () => updateBorder('over'),\n          onDragLeave: () => updateBorder('leave'),\n          children: _ref => {\n            let {\n              getRootProps,\n              getInputProps\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: \"skyBlue\",\n                width: '40%'\n              },\n              ...getRootProps({\n                className: 'drop-zone'\n              }),\n              ref: dropRef,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps(),\n                style: {\n                  height: \"100px\",\n                  backgroundColor: \"skyBlue\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Drag and drop a file OR\", /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    color: \"red\",\n                    border: \"none\",\n                    backgroundColor: 'transparent'\n                  },\n                  children: \"click here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 43\n                }, this), \"to select a file\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Selected file:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), \" \", file.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), previewSrc ? isPreviewAvailable ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"preview-image\",\n            style: {\n              width: \"200px\",\n              height: \"200px;\"\n            },\n            src: previewSrc,\n            alt: \"Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No preview available for this file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Image preview will be shown here after selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StudentFileUpload, \"c9FFT4ZZxyLtCbLKJ950Qk8SGFM=\");\n\n_c = StudentFileUpload;\nexport default StudentFileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentFileUpload\");","map":{"version":3,"sources":["C:/Users/anuwa/Desktop/Student_New/client/src/components/FileUpload/index.js"],"names":["React","useState","useRef","useEffect","Dropzone","axios","Form","Row","Col","Button","StudentFileUpload","props","file","setFile","previewSrc","setPreviewSrc","data","setData","submissionTypes","submissionName","SetsubmissionName","errorMsg","setErrorMsg","isPreviewAvailable","setIsPreviewAvailable","dropRef","get","then","response","length","map","submission","catch","error","console","log","onDrop","files","uploadedFile","fileReader","FileReader","onload","result","readAsDataURL","name","match","current","style","border","updateBorder","dragState","handleOnSubmit","event","preventDefault","subName","groupname","sessionStorage","getItem","sub","formData","FormData","append","post","headers","history","push","onChangeSubmissionName","e","target","value","handleInputChange","getRootProps","getInputProps","backgroundColor","width","className","height","color"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport { Form, Row, Col, Button } from 'react-bootstrap';\r\n\r\nconst StudentFileUpload = (props) => {\r\n  const [file, setFile] = useState(null); // state for storing actual image\r\n  const [previewSrc, setPreviewSrc] = useState(''); // state for storing previewImage\r\n  const [data, setData] = useState({\r\n    // groupname: '',\r\n    submissionTypes: [],\r\n  });\r\n  const [submissionName, SetsubmissionName] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\r\n  const dropRef = useRef(); // React ref for managing the hover state of droppable area\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8082/api/submissionType/') //backend path\r\n      .then(response => {\r\n        if (response.data.length > 0) {\r\n          setData({\r\n            submissionTypes: response.data.map(submission => submission.submissionName)\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  const onDrop = (files) => {\r\n    const [uploadedFile] = files;\r\n    setFile(uploadedFile);\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(uploadedFile);\r\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n    dropRef.current.style.border = '2px dashed #e9ebeb';\r\n  };\r\n\r\n  const updateBorder = (dragState) => {\r\n    if (dragState === 'over') {\r\n      dropRef.current.style.border = '2px solid #000';\r\n    } else if (dragState === 'leave') {\r\n      dropRef.current.style.border = '2px dashed #e9ebeb';\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const subName   = submissionName;\r\n      const groupname = sessionStorage.getItem(\"group\");\r\n      const sub = subName.submissionName;\r\n      // if (groupname.trim() !== '' && submissionName.trim() !== '') {\r\n      if (file) {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('groupname', groupname);\r\n        formData.append('submissionName', sub);\r\n\r\n        setErrorMsg('');\r\n        await axios.post('http://localhost:8082/api/', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n        props.history.push('/student-home');\r\n      } else {\r\n        setErrorMsg('Please select a file to add.');\r\n      }\r\n      // } else {\r\n      //   setErrorMsg('Please enter all the field values.');\r\n      // }\r\n    } catch (error) {\r\n      error.response && setErrorMsg(error.response.data);\r\n    }\r\n  };\r\n\r\n  const onChangeSubmissionName = (e) => {\r\n    SetsubmissionName({\r\n      submissionName: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    setData({\r\n      ...data,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <hr />\r\n      <h3>System Admin - Document / Presentation Template Upload Portal</h3>\r\n      <hr />\r\n      <br />\r\n      <Form className=\"search-form\" onSubmit={handleOnSubmit}>\r\n        {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"groupname\">\r\n              <Form.Label> Group name </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"groupname\"\r\n                required\r\n                readOnly\r\n                value={sessionStorage.getItem(\"group\") || ''}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"Submission Type\">\r\n              <Form.Label> Submission Type</Form.Label>\r\n              <Form.Select aria-label='Default select example'\r\n                required\r\n                className=\"form-control\"\r\n                value={data.submissionName}\r\n                onChange={onChangeSubmissionName}\r\n              // onChange={(e) => setState({submissionName: e.target.value})}\r\n              >\r\n                {\r\n                  data.submissionTypes.map(function (submission) {\r\n                    return <option\r\n                      key={submission}\r\n                      value={submission}>{submission}\r\n                    </option>;\r\n                  })\r\n                }\r\n                \r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"groupname\">\r\n              <Form.Label> Description </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"a\"\r\n                required\r\n                readOnly\r\n                \r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"groupname\">\r\n              <Form.Label> Deadline </Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"a\"\r\n                required\r\n                readOnly\r\n                \r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <div className=\"upload-section\">\r\n          <Dropzone\r\n            onDrop={onDrop}\r\n            onDragEnter={() => updateBorder('over')}\r\n            onDragLeave={() => updateBorder('leave')}\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div style={{ backgroundColor: \"skyBlue\", width: '40%' }}{...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\r\n                <input {...getInputProps()} style={{ height: \"100px\", backgroundColor: \"skyBlue\" }} />\r\n                <p>Drag and drop a file OR<button style={{ color: \"red\", border: \"none\", backgroundColor: 'transparent' }}>click here</button>to select a file</p>\r\n                {file && (\r\n                  <div>\r\n                    <strong>Selected file:</strong> {file.name}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n          {previewSrc ? (\r\n            isPreviewAvailable ? (\r\n              <div className=\"image-preview\">\r\n                <img className=\"preview-image\" style={{ width: \"200px\", height: \"200px;\" }} src={previewSrc} alt=\"Preview\" />\r\n              </div>\r\n            ) : (\r\n              <div className=\"preview-message\">\r\n                <br />\r\n                <p>No preview available for this file</p>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className=\"preview-message\">\r\n              <p>Image preview will be shown here after selection</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <br />\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StudentFileUpload;"]},"metadata":{},"sourceType":"module"}