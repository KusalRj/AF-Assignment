{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitRepo\\\\AF-Assignment\\\\client\\\\src\\\\components\\\\students.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Students() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [editStudentID, setEditStudentID] = useState();\n  const [editStudents, setEditStudents] = useState({\n    firstName: \"\",\n    email: \"\"\n  });\n  useEffect(() => {\n    function getStudents() {\n      axios.get(\"http://localhost:8082/api/user/\").then(res => {\n        setStudents(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    ;\n    getStudents();\n  }, []);\n\n  const DeleteStudents = (event, id) => {\n    event.preventDefault();\n\n    if (id !== null) {\n      axios.delete(`http://localhost:8082/api/user/delete/${id}`).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    ;\n  };\n\n  const EditClick = (event, student) => {\n    event.preventDefault();\n    setEditStudentID(student._id);\n    const formValues = {\n      name: student.name,\n      email: student.email\n    };\n    setEditStudents(formValues);\n  };\n\n  const EditStudents = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const Data = { ...editStudents\n    };\n    Data[fieldName] = fieldValue;\n    setEditStudents(Data);\n  };\n\n  const EditSubmit = event => {\n    event.preventDefault();\n    const edits = {\n      id: editStudentID,\n      name: editStudents.name,\n      email: editStudents.email\n    }; //console.log(edits);\n\n    axios.put(`http://localhost:8082/api/user/update/${editStudentID}`, edits).then(res => {\n      setStudents(res.data);\n      setEditStudentID('');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => EditSubmit(event),\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Student Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: students.map(student => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editStudentID === student._id ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  required: \"required\",\n                  name: \"name\",\n                  placeholder: \"name\",\n                  value: editStudents.name,\n                  onChange: EditStudents\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  required: \"required\",\n                  name: \"email\",\n                  placeholder: \"email\",\n                  value: editStudents.email,\n                  onChange: EditStudents\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-success\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: student.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: event => DeleteStudents(event, student._id),\n                  className: \"btn btn-danger\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: event => EditClick(event, student),\n                  className: \"btn btn-warning\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Students, \"/jkNfsfxKIjF58yt1bjYr8hMH/w=\");\n\n_c = Students;\nexport default Students;\n\nvar _c;\n\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"sources":["D:/GitRepo/AF-Assignment/client/src/components/students.js"],"names":["React","useState","useEffect","Fragment","axios","Students","students","setStudents","editStudentID","setEditStudentID","editStudents","setEditStudents","firstName","email","getStudents","get","then","res","data","catch","err","console","log","DeleteStudents","event","id","preventDefault","delete","EditClick","student","_id","formValues","name","EditStudents","fieldName","target","getAttribute","fieldValue","value","Data","EditSubmit","edits","put","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,EAAlD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC;AAC7CW,IAAAA,SAAS,EAAE,EADkC;AAE7CC,IAAAA,KAAK,EAAE;AAFsC,GAAD,CAAhD;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASY,WAAT,GAAuB;AACnBV,MAAAA,KAAK,CAACW,GAAN,CAAU,iCAAV,EAA6CC,IAA7C,CAAkDC,GAAG,IAAI;AACrDV,QAAAA,WAAW,CAACU,GAAG,CAACC,IAAL,CAAX;AACH,OAFD,EAEGC,KAFH,CAESC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAJD;AAKH;;AAAA;AACDN,IAAAA,WAAW;AACd,GATQ,EASN,EATM,CAAT;;AAWA,QAAMS,cAAc,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AAClCD,IAAAA,KAAK,CAACE,cAAN;;AACA,QAAID,EAAE,KAAK,IAAX,EAAiB;AACbrB,MAAAA,KAAK,CAACuB,MAAN,CAAc,yCAAwCF,EAAG,EAAzD,EAA4DT,IAA5D,CAAiEC,GAAG,IAAI;AACpEI,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACH,OAFD,EAEGC,KAFH,CAESC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAJD;AAKH;;AAAA;AACJ,GATD;;AAWA,QAAMQ,SAAS,GAAG,CAACJ,KAAD,EAAQK,OAAR,KAAoB;AAClCL,IAAAA,KAAK,CAACE,cAAN;AACAjB,IAAAA,gBAAgB,CAACoB,OAAO,CAACC,GAAT,CAAhB;AAEA,UAAMC,UAAU,GAAG;AACfC,MAAAA,IAAI,EAAEH,OAAO,CAACG,IADC;AAEfnB,MAAAA,KAAK,EAAEgB,OAAO,CAAChB;AAFA,KAAnB;AAIAF,IAAAA,eAAe,CAACoB,UAAD,CAAf;AACH,GATD;;AAWA,QAAME,YAAY,GAAIT,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACE,cAAN;AAEA,UAAMQ,SAAS,GAAGV,KAAK,CAACW,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAlB;AACA,UAAMC,UAAU,GAAGb,KAAK,CAACW,MAAN,CAAaG,KAAhC;AAEA,UAAMC,IAAI,GAAG,EAAC,GAAG7B;AAAJ,KAAb;AACA6B,IAAAA,IAAI,CAACL,SAAD,CAAJ,GAAkBG,UAAlB;AAEA1B,IAAAA,eAAe,CAAC4B,IAAD,CAAf;AACH,GAVD;;AAYA,QAAMC,UAAU,GAAIhB,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACE,cAAN;AAEA,UAAMe,KAAK,GAAG;AACVhB,MAAAA,EAAE,EAAEjB,aADM;AAEVwB,MAAAA,IAAI,EAAEtB,YAAY,CAACsB,IAFT;AAGVnB,MAAAA,KAAK,EAAEH,YAAY,CAACG;AAHV,KAAd,CAH0B,CAS1B;;AAEAT,IAAAA,KAAK,CAACsC,GAAN,CAAW,yCAAwClC,aAAc,EAAjE,EAAoEiC,KAApE,EAA2EzB,IAA3E,CAAgFC,GAAG,IAAI;AACnFV,MAAAA,WAAW,CAACU,GAAG,CAACC,IAAL,CAAX;AACAT,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,KAHD,EAGGU,KAHH,CAGSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KALD;AAMH,GAjBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAGI,KAAD,IAAWgB,UAAU,CAAChB,KAAD,CAArC;AAAA,6BACA;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA,oBACKlB,QAAQ,CAACqC,GAAT,CAAad,OAAO,iBACrB,QAAC,QAAD;AAAA,sBACKrB,aAAa,KAAKqB,OAAO,CAACC,GAA1B,gBACG;AAAA,sCACA;AAAA,uCAAI;AACA,kBAAA,IAAI,EAAC,MADL;AAEA,kBAAA,QAAQ,EAAC,UAFT;AAGA,kBAAA,IAAI,EAAC,MAHL;AAIA,kBAAA,WAAW,EAAC,MAJZ;AAKA,kBAAA,KAAK,EAAEpB,YAAY,CAACsB,IALpB;AAMA,kBAAA,QAAQ,EAAEC;AANV;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBADA,eAQA;AAAA,uCAAI;AACA,kBAAA,IAAI,EAAC,OADL;AAEA,kBAAA,QAAQ,EAAC,UAFT;AAGA,kBAAA,IAAI,EAAC,OAHL;AAIA,kBAAA,WAAW,EAAC,OAJZ;AAKA,kBAAA,KAAK,EAAEvB,YAAY,CAACG,KALpB;AAMA,kBAAA,QAAQ,EAAEoB;AANV;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBARA,eAeA;AAAA,uCACI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAfA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,gBAqBG;AAAA,sCACI;AAAA,0BAAKJ,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAKH,OAAO,CAAChB;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA,wCACI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAGW,KAAD,IAAWD,cAAc,CAACC,KAAD,EAAQK,OAAO,CAACC,GAAhB,CAAxD;AAA8E,kBAAA,SAAS,EAAC,gBAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,OAAO,EAAGN,KAAD,IAAWI,SAAS,CAACJ,KAAD,EAAQK,OAAR,CAAnD;AAAqE,kBAAA,SAAS,EAAC,iBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBR;AAAA;AAAA;AAAA;AAAA,kBADC;AADL;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH;;GA7HQxB,Q;;KAAAA,Q;AA+HT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction Students() {\r\n\r\n    const [students, setStudents] = useState([]);\r\n    const [editStudentID, setEditStudentID] = useState();\r\n    const [editStudents, setEditStudents] = useState({\r\n        firstName: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        function getStudents() {\r\n            axios.get(\"http://localhost:8082/api/user/\").then(res => {\r\n                setStudents(res.data);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        };\r\n        getStudents();\r\n    }, []);\r\n\r\n    const DeleteStudents = (event, id) => {\r\n        event.preventDefault();\r\n        if (id !== null) {\r\n            axios.delete(`http://localhost:8082/api/user/delete/${id}`).then(res => {\r\n                console.log(res.data);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })  \r\n        };\r\n    };\r\n\r\n    const EditClick = (event, student) => {\r\n        event.preventDefault();\r\n        setEditStudentID(student._id);\r\n\r\n        const formValues = {\r\n            name: student.name,\r\n            email: student.email\r\n        }\r\n        setEditStudents(formValues);\r\n    };\r\n\r\n    const EditStudents = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const Data = {...editStudents};\r\n        Data[fieldName] = fieldValue;\r\n\r\n        setEditStudents(Data);\r\n    } \r\n    \r\n    const EditSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const edits = {\r\n            id: editStudentID,\r\n            name: editStudents.name,\r\n            email: editStudents.email\r\n        }\r\n                \r\n        //console.log(edits);\r\n\r\n        axios.put(`http://localhost:8082/api/user/update/${editStudentID}`, edits).then(res => {\r\n            setStudents(res.data);\r\n            setEditStudentID('');\r\n        }).catch(err => {\r\n            console.log(err);\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Student List</h1>\r\n            <form onSubmit={(event) => EditSubmit(event)}>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Student Name</th>\r\n                        <th>Email Address</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {students.map(student => \r\n                    <Fragment>\r\n                        {editStudentID === student._id ? (\r\n                            <tr> \r\n                            <td><input \r\n                                type=\"text\" \r\n                                required=\"required\"\r\n                                name='name'\r\n                                placeholder=\"name\"\r\n                                value={editStudents.name}\r\n                                onChange={EditStudents}></input></td>\r\n                            <td><input \r\n                                type=\"email\" \r\n                                required=\"required\"\r\n                                name='email'\r\n                                placeholder=\"email\"\r\n                                value={editStudents.email}\r\n                                onChange={EditStudents}></input></td>\r\n                            <td>\r\n                                <button type='submit' className=\"btn btn-success\">Save</button>\r\n                            </td>\r\n                         </tr>\r\n                        ) : (\r\n                            <tr> \r\n                                <td>{student.name}</td>\r\n                                <td>{student.email}</td>\r\n                                <td>\r\n                                    <button type=\"button\" onClick={(event) => DeleteStudents(event, student._id)} className=\"btn btn-danger\">Delete</button>\r\n                                    <button type='button' onClick={(event) => EditClick(event, student)} className=\"btn btn-warning\">Edit</button>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </Fragment>  \r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Students;"]},"metadata":{},"sourceType":"module"}