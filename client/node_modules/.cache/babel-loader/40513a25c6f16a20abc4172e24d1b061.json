{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitRepo\\\\AF-Assignment\\\\client\\\\src\\\\components\\\\staff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Staff() {\n  _s();\n\n  const [staffs, setStaffs] = useState([]);\n  const [editStaffID, setEditStaffID] = useState();\n  const [editStaff, setEditStaff] = useState({\n    name: \"\",\n    email: \"\",\n    position: \"\"\n  });\n  useEffect(() => {\n    function getStaff() {\n      axios.get(\"http://localhost:8070/api/staff/\").then(res => {\n        setStaffs(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    ;\n    getStaff();\n  }, []);\n\n  const DeleteStaffs = (event, id) => {\n    event.preventDefault();\n\n    if (id !== null) {\n      axios.delete(`http://localhost:8070/staff/delete/${id}`).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    ;\n  };\n\n  const EditClick = (event, staff) => {\n    event.preventDefault();\n    setEditStaffID(staff._id);\n    const formValues = {\n      name: staff.name,\n      email: staff.email,\n      position: staff.position\n    };\n    setEditStaff(formValues);\n  };\n\n  const EditStaff = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const Data = { ...editStaff\n    };\n    Data[fieldName] = fieldValue;\n    setEditStaff(Data);\n  };\n\n  const EditSubmit = event => {\n    event.preventDefault();\n    const edits = {\n      id: editStaffID,\n      name: editStaff.name,\n      email: editStaff.email,\n      position: editStaff.position\n    };\n    axios.put(`http://localhost:8070/staff/update/${editStaffID}`, edits).then(res => {\n      setStaffs(res.data);\n      setEditStaffID('');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Staff List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => EditSubmit(event),\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Member Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: staffs.map(staff => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editStaffID === staff._id ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  required: \"required\",\n                  name: \"name\",\n                  placeholder: \"name\",\n                  value: editStaff.name,\n                  onChange: EditStaff\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  required: \"required\",\n                  name: \"email\",\n                  placeholder: \"email\",\n                  value: editStaff.email,\n                  onChange: EditStaff\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  required: \"required\",\n                  name: \"position\",\n                  placeholder: \"position\",\n                  value: editStaff.position,\n                  onChange: EditStaff\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-success\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: staff.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: staff.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: staff.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: event => DeleteStaffs(event, staff._id),\n                  className: \"btn btn-danger\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: event => EditClick(event, staff),\n                  className: \"btn btn-warning\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Staff, \"i1BiYLPcUlcb22uXKpuOi6G8y30=\");\n\n_c = Staff;\nexport default Staff;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staff\");","map":{"version":3,"sources":["D:/GitRepo/AF-Assignment/client/src/components/staff.js"],"names":["React","useState","useEffect","Fragment","axios","Staff","staffs","setStaffs","editStaffID","setEditStaffID","editStaff","setEditStaff","name","email","position","getStaff","get","then","res","data","catch","err","console","log","DeleteStaffs","event","id","preventDefault","delete","EditClick","staff","_id","formValues","EditStaff","fieldName","target","getAttribute","fieldValue","value","Data","EditSubmit","edits","put","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, Fragment} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Staff() {\r\n    \r\n    const [staffs, setStaffs] = useState([]);\r\n    const [editStaffID, setEditStaffID] = useState();\r\n    const [editStaff, setEditStaff] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        position: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        function getStaff() {\r\n            axios.get(\"http://localhost:8070/api/staff/\").then(res => {\r\n                setStaffs(res.data);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        };\r\n        getStaff();\r\n    }, []);\r\n\r\n    const DeleteStaffs = (event, id) => {\r\n        event.preventDefault();\r\n        if (id !== null) {\r\n            axios.delete(`http://localhost:8070/staff/delete/${id}`).then(res => {\r\n                console.log(res.data);    \r\n            }).catch(err => {\r\n                console.log(err);\r\n            })  \r\n        };\r\n    };\r\n\r\n    const EditClick = (event, staff) => {\r\n        event.preventDefault();\r\n        setEditStaffID(staff._id);\r\n\r\n        const formValues = {\r\n            name: staff.name,\r\n            email: staff.email,\r\n            position: staff.position\r\n        }\r\n        setEditStaff(formValues);\r\n    };\r\n\r\n    const EditStaff = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const Data = {...editStaff};\r\n        Data[fieldName] = fieldValue;\r\n\r\n        setEditStaff(Data);\r\n    }\r\n\r\n    const EditSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const edits = {\r\n            id: editStaffID,\r\n            name: editStaff.name,\r\n            email: editStaff.email,\r\n            position: editStaff.position\r\n        }\r\n\r\n        axios.put(`http://localhost:8070/staff/update/${editStaffID}`, edits).then(res => {\r\n            setStaffs(res.data);\r\n            setEditStaffID('');\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Staff List</h1>\r\n            <form onSubmit={(event) => EditSubmit(event)}>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Member Name</th>\r\n                        <th>Email Address</th>\r\n                        <th>Position</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {staffs.map(staff =>\r\n                    <Fragment>\r\n                        {editStaffID === staff._id ? (\r\n                            <tr>\r\n                            <td><input\r\n                                type='text'\r\n                                required='required'\r\n                                name='name'\r\n                                placeholder='name'\r\n                                value={editStaff.name}\r\n                                onChange={EditStaff}></input></td>\r\n                            <td><input\r\n                                type='email'\r\n                                required='required'\r\n                                name='email'\r\n                                placeholder='email'\r\n                                value={editStaff.email}\r\n                                onChange={EditStaff}></input></td>\r\n                            <td><input\r\n                                type='text'\r\n                                required='required'\r\n                                name='position'\r\n                                placeholder='position'\r\n                                value={editStaff.position}\r\n                                onChange={EditStaff}></input></td>\r\n                            <td>\r\n                                <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n                            </td>\r\n                            </tr>\r\n                        ) : (\r\n                            <tr> \r\n                                <td>{staff.name}</td>\r\n                                <td>{staff.email}</td>\r\n                                <td>{staff.position}</td>\r\n                                <td>\r\n                                    <button type=\"button\" onClick={(event) => DeleteStaffs(event, staff._id)} className=\"btn btn-danger\">Delete</button>\r\n                                    <button type='button' onClick={(event) => EditClick(event, staff)} className=\"btn btn-warning\">Edit</button>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </Fragment>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Staff;"]},"metadata":{},"sourceType":"module"}